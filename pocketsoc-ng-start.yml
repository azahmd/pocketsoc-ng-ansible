---
- name: stop pocketsoc-ng
  hosts: trainingvms
  become: true
  vars_files:
    - pocketsoc-ng_vars.env

  tasks:
    - name: Install certificates
      shell: docker run --rm --name transfer -v "/etc/letsencrypt:/host-certs" -v "certificates:/container-certs" quay.io/centos/centos:stream8 cp -r /host-certs /container-certs

    - name: portainer docker run
      shell: docker volume create portainer_data && docker container stop portainer && docker container rm portainer && docker run -p 8000:8000 -p 9443:9443 -p 8081:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v pocketsoc-ng-portainer_portainer_data:/data -v certificates:/certs portainer/portainer-ce:latest  --sslcert /certs/host-certs/live/{{ ansible_fqdn }}/cert.pem --sslkey /certs/host-certs/live/{{ ansible_fqdn }}/privkey.pem
#      shell: docker container stop portainer && docker container rm portainer && docker run -p 8000:8000 -p 9443:9443 -p 8081:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v pocketsoc-ng-portainer_portainer_data:/data -v certificates:/certs portainer/portainer-ce:latest --sslcert /certs/host-certs/live/{{ ansible_fqdn }}/cert.pem --sslkey /certs/host-certs/live/{{ ansible_fqdn }}/privkey.pem

    - name: build portainer admin password
      shell: "{{ admin_password_command }}"
      register: adminpassword

    - name: get portainer admin authkey
      uri:
        url: http://localhost:8081/api/auth
        method: POST
        body: "{ \"username\": \"admin\", \"password\": \"{{ adminpassword.stdout }}\" }"
        body_format: json
        headers:
          Content-Type: "application/json"
      register: auth
      
    - name: redeploy portainer stack
      ignore_errors: yes
      uri:
        url: "http://localhost:8081/api/stacks/1/git/redeploy"
        method: POST
        timeout: 600
        body: " { \"RepositoryReferenceName\": \"refs/heads/main\", \"env\": [{\"name\": \"HOST_HOSTNAME\", \"value\": \"{{ ansible_fqdn}}\"},{\"name\": \"ADMIN_PASSWORD\", \"value\": \"{{ adminpassword.stdout }}\"}] }"
        body_format: json
        headers:
          Content-Type: "application/json"
          Authorization: "{{ auth.json.jwt  }}"

    - name: start pocketsoc-ng
      ignore_errors: yes
      uri:
        url: "http://localhost:8081/api/stacks/1/start"
        method: POST
        timeout: 600
        body_format: json
        headers:
          Content-Type: "application/json"
          Authorization: "{{ auth.json.jwt  }}"

